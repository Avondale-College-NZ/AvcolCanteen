@model IEnumerable<AvcolCanteen.Models.Products>

@{
    ViewData["Title"] = "Menu";
}

<h1 class="heading">Menu</h1>
<form asp-controller="ProductsUser" asp-action="Menu" method="get">
    <div class="form-group">
        <input type="text" name="searchString" class="form-control" placeholder="Search Menu" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Search" class="btn btn-primary" />
    </div>

    <div class="form-group">
        <label for="sortOrder">Sort by:</label>
        <select name="sortOrder" id="sortOrder" class="form-control" onchange="this.form.submit()">
            <option value="">-- Please Select --</option>
            <option value="name_asc">Name Ascending</option>
            <option value="name_desc">Name Descending</option>
            <option value="price_asc">Price Low to High</option>
            <option value="price_desc">Price High to Low</option>
        </select>
    </div>
</form>
<div class="container-fluid">
    <div class="card">
        <h1>Cart</h1>
        <ul class="listCard">
        </ul>
        <div class="checkOut">
            <div class="total">0</div>
            <div class="closeShopping">Close</div>
        </div>
    </div>
</div>
<div class="all-products">

    @foreach (var item in Model)
    {
        <div class="product">
            <img src="@("~/UploadedImg/"+item.ImageName)" asp-append-version="true" style="max-height:150px; margin-top:50px;" />
            <div class="product-info">
                <h4 class="product-title">
                    @Html.DisplayFor(modelItem => item.Name)
                </h4>
                <p class="product-price">
                    @Html.DisplayFor(modelItem => item.Price)
                </p>
                <button type="button" class="product-btn" onclick="showPopup(@item.ProductID)">Buy Now</button>
            </div>
        </div>
    }
</div>
@* Code needed for cart icon js *@
<input type="hidden" id="cartItemCount" value="@ViewData["CartItemCount"]" />



@* Popup Modal *@
<div id="quantityPopup">
    <div class="popup-content">
        <span class="close" onclick="closePopup()">&times;</span>
        <h2>Select Quantity</h2>
        <form id="quantityForm" asp-controller="ProductsUser" asp-action="AddToCart" method="post">
            <input type="hidden" name="productId" id="productId" value="" />
            <label for="quantity">Quantity:</label>
            <input type="number" id="quantity" name="quantity" value="1" min="1" max="10" />
            <input type="submit" value="Add to Cart" />
        </form>
    </div>
</div>

@{
    var currentPage = ViewData["CurrentPage"] as int? ?? 1;
    var totalPages = ViewData["TotalPages"] as int? ?? 1;
}

<nav>
    <ul class="pagination pg-dark justify-content-center" style="margin-top:50px;">

        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="?pageNumber=@(currentPage - 1)&sortOrder=@ViewData["CurrentSort"]&searchString=@ViewData["CurrentFilter"]" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>

        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                <a class="page-link" href="?pageNumber=@i&sortOrder=@ViewData["CurrentSort"]&searchString=@ViewData["CurrentFilter"]">@i</a>
            </li>
        }

        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
            <a class="page-link" href="?pageNumber=@(currentPage + 1)&sortOrder=@ViewData["CurrentSort"]&searchString=@ViewData["CurrentFilter"]" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</nav>
@* <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.Name)</a>
<a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]">@Html.DisplayNameFor(model => model.Name)</a> *@